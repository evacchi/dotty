Term.Inlined(None, Nil, Term.Inlined(Some(Term.Ident("foo0")), Nil, Term.Typed(Term.Literal(Constant.Int(54)), TypeTree.Ident("Int"))))
Term.Inlined(None, Nil, Term.Inlined(Some(Term.Apply(Term.Ident("foo1"), List(Term.Literal(Constant.Int(4))))), Nil, Term.Typed(Term.Literal(Constant.Int(8)), TypeTree.Ident("Int"))))
Term.Inlined(None, Nil, Term.Inlined(Some(Term.Apply(Term.Ident("foo1"), List(Term.Ident("foo0")))), List(ValDef("i", TypeTree.Inferred(), Some(Term.Inlined(Some(Term.Ident("foo0")), Nil, Term.Typed(Term.Literal(Constant.Int(54)), TypeTree.Ident("Int")))))), Term.Typed(Term.Apply(Term.Select(Term.Ident("i"), "+", Some(Signature(List(scala.Int), scala.Int))), List(Term.Ident("i"))), TypeTree.Ident("Int"))))
Term.Inlined(None, Nil, Term.Inlined(Some(Term.Apply(Term.Ident("foo2"), List(Term.Literal(Constant.Int(5))))), Nil, Term.Typed(Term.Inlined(Some(TypeTree.Ident("Test$")), Nil, Term.Typed(Term.Literal(Constant.Int(10)), TypeTree.Ident("Int"))), TypeTree.Ident("Int"))))
Term.Inlined(None, Nil, Term.Inlined(Some(Term.Apply(Term.Ident("foo2"), List(Term.Ident("foo0")))), List(ValDef("i", TypeTree.Inferred(), Some(Term.Inlined(Some(Term.Ident("foo0")), Nil, Term.Typed(Term.Literal(Constant.Int(54)), TypeTree.Ident("Int")))))), Term.Typed(Term.Inlined(Some(TypeTree.Ident("Test$")), Nil, Term.Typed(Term.Apply(Term.Select(Term.Ident("i"), "+", Some(Signature(List(scala.Int), scala.Int))), List(Term.Ident("i"))), TypeTree.Ident("Int"))), TypeTree.Ident("Int"))))
Term.Inlined(None, Nil, Term.Inlined(Some(Term.Apply(Term.Ident("foo2"), List(Term.Apply(Term.Ident("foo1"), List(Term.Ident("foo0")))))), List(ValDef("i", TypeTree.Inferred(), Some(Term.Inlined(Some(Term.Apply(Term.Ident("foo1"), List(Term.Ident("foo0")))), List(ValDef("i", TypeTree.Inferred(), Some(Term.Inlined(Some(Term.Ident("foo0")), Nil, Term.Typed(Term.Literal(Constant.Int(54)), TypeTree.Ident("Int")))))), Term.Typed(Term.Apply(Term.Select(Term.Ident("i"), "+", Some(Signature(List(scala.Int), scala.Int))), List(Term.Ident("i"))), TypeTree.Ident("Int")))))), Term.Typed(Term.Inlined(Some(TypeTree.Ident("Test$")), Nil, Term.Typed(Term.Apply(Term.Select(Term.Ident("i"), "+", Some(Signature(List(scala.Int), scala.Int))), List(Term.Ident("i"))), TypeTree.Ident("Int"))), TypeTree.Ident("Int"))))
